/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   saved-request-editor.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-if.d.ts" />
/// <reference path="../polymer/types/lib/legacy/class.d.ts" />
/// <reference path="../polymer/types/lib/utils/render-status.d.ts" />
/// <reference path="../iron-resizable-behavior/iron-resizable-behavior.d.ts" />
/// <reference path="../iron-flex-layout/iron-flex-layout.d.ts" />
/// <reference path="../paper-checkbox/paper-checkbox.d.ts" />
/// <reference path="../paper-input/paper-input.d.ts" />
/// <reference path="../paper-input/paper-textarea.d.ts" />
/// <reference path="../paper-button/paper-button.d.ts" />
/// <reference path="../paper-chip-input/paper-chip-input.d.ts" />
/// <reference path="../iron-form/iron-form.d.ts" />
/// <reference path="../iron-collapse/iron-collapse.d.ts" />
/// <reference path="../paper-icon-button/paper-icon-button.d.ts" />
/// <reference path="../arc-icons/arc-icons.d.ts" />

declare namespace UiElements {

  /**
   * A dialog to edit request meta data.
   *
   * ### Styling
   *
   * `<saved-request-editor>` provides the following custom properties and mixins
   * for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--saved-request-editor` | Mixin applied to the element | `{}`
   */
  class SavedRequestEditor extends
    Polymer.IronResizableBehavior(
    Polymer.Element) {

    /**
     * The request object to be saved / updated in the datastore.
     * It's not required for the editor to work.
     * This object will be attached to `save-request` object as a reference.
     * When this object change it computes values for `name`, `isSaved`,
     * `isDrive`, `projectName` and `projectId` properties.
     */
    request: object|null|undefined;

    /**
     * Name of the request.
     */
    name: string|null|undefined;

    /**
     * Request description.
     */
    description: string|null|undefined;

    /**
     * Should be set if the request has been already saved in the datastore.
     * Adds UI controls to override or save as new.
     */
    readonly isSaved: boolean|null|undefined;

    /**
     * True when saving request to Google Drive.
     */
    isDrive: boolean|null|undefined;

    /**
     * List of available projects.
     */
    projects: any[]|null|undefined;

    /**
     * Set if the user chooses to override current request.
     */
    readonly override: boolean|null|undefined;

    /**
     * True when additional options are opened.
     */
    additionalOptionsOpened: boolean|null|undefined;

    /**
     * List of selected in the dialog project names.
     */
    selectedProjects: Array<String|null>|null;
    connectedCallback(): void;
    disconnectedCallback(): void;

    /**
     * Updates the list of projects when project object changed.
     */
    _projectDataChanged(e: CustomEvent|null): void;

    /**
     * Updates the list of projects when project datastore has been destroyed.
     */
    _datastoreDestroyed(e: CustomEvent|null): void;

    /**
     * Refreshes the list of projects after next render frame.
     */
    _refreshProjectsList(): void;

    /**
     * Resets the state of the UI
     */
    reset(): void;

    /**
     * Sends the `cancel-request-edit` custom event to cancel the edit.
     */
    _cancel(): void;

    /**
     * Sets `override` to `false` and sends the form.
     */
    _save(): void;

    /**
     * Sets `override` to `true` and sends the form.
     */
    _override(): void;

    /**
     * Validates and submits the form.
     */
    _sendForm(): void;

    /**
     * Updates list of available projects after the overlay is opened.
     */
    _updateProjectsList(): any;

    /**
     * Sort function used to sort projects in order.
     */
    _projectsSortFn(a: any, b: any): any;

    /**
     * Computes a list of suggestion for autocomplete element.
     * From the list of `projects` it takes names for each project and returns
     * new list for suggestions.
     */
    _computeAutocomplete(projects: Array<object|null>|null): Array<String|null>|null;

    /**
     * Sends the `save-request` custom event with computed detail object.
     */
    _formSubmit(e: CustomEvent|null): void;

    /**
     * Computes `save-request` custom event's `detail` object
     *
     * @returns A detail property of the event.
     */
    _computeEventDetail(): object|null;
    _toggleOptions(): void;
    _computeIsSaved(request: any): any;
    _requestChanged(request: any, projects: any): void;

    /**
     * Notifies resize when the height of autogrow textarea changes.
     */
    _autogrowCheckResize(): void;
  }
}

interface HTMLElementTagNameMap {
  "saved-request-editor": UiElements.SavedRequestEditor;
}
